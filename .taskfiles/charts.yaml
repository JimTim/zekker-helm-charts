---
version: "3"

vars:
  REPO_CONFIG_FILE: .ci/repo-config.yaml
  CT_CONFIG_FILE: .ci/ct/ct.yaml
  CHARTS_EXCLUDED_FROM_LINT:
    sh: yq eval '.excluded-charts-lint | join(",")' {{.REPO_CONFIG_FILE}}
  CHARTS_EXCLUDED_FROM_INSTALL:
    sh: yq eval '.excluded-charts-install | join(",")' {{.REPO_CONFIG_FILE}}

tasks:
  lint:
    desc: Run ct-lint on charts
    cmds:
      - ct lint --config {{.CT_CONFIG_FILE}} --excluded-charts "{{.CHARTS_EXCLUDED_FROM_LINT}}"
    silent: true

  lint-all:
    desc: Run ct-lint on all charts
    cmds:
      - ct lint --config {{.CT_CONFIG_FILE}} --all --excluded-charts "{{.CHARTS_EXCLUDED_FROM_LINT}}"
    silent: true

  dependency-cleanup:
    desc: clean up chart dependencies
    dir: "{{.PROJECT_DIR}}/charts"
    cmds:
    - find {{.PROJECT_DIR}}/charts/ -type f -name 'Chart.lock' -mindepth 1 -print0 | xargs -r -0 rm
    - find {{.PROJECT_DIR}}/charts/ -type d -name 'charts' -mindepth 1 -print0 | xargs -r -0 rm -rf
    silent: true

  format:
    desc: Format all charts
    cmds:
      - |
        for c in $(ls {{.PROJECT_DIR}}/charts/apps/); do
          yq eval -i 'sort_keys(.)' {{.PROJECT_DIR}}/charts/apps/$c/Chart.yaml
        done

  docs:
    desc: Generate docs
    cmds:
      - |
        for c in $(ls {{.PROJECT_DIR}}/charts/apps/); do
          if [ ! -f {{.PROJECT_DIR}}/charts/apps/$c/README_CONFIG.md.gotmpl ]; then
            cp {{.PROJECT_DIR}}/charts/README_CONFIG.md.gotmpl {{.PROJECT_DIR}}/charts/apps/$c/README_CONFIG.md.gotmpl
          fi
        done
      - helm-docs --template-files charts/README.md.gotmpl --template-files=README_CONFIG.md.gotmpl
    silent: true
